(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{424:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),a("h2",{attrs:{id:"时间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),a("p",[t._v("推导大O阶：")]),t._v(" "),a("ol",[a("li",[t._v("用常数"),a("code",[t._v("1")]),t._v("取代运行时间所有加法常数")]),t._v(" "),a("li",[t._v("在修改后的运行次数函数中，只保留最高阶项")]),t._v(" "),a("li",[t._v("如果最高阶项存在且不是"),a("code",[t._v("1")]),t._v("，则去除这个项相乘的常数\n得到的就是大O阶")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("int count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("由于每次"),a("code",[t._v("count")]),t._v("乘以"),a("code",[t._v("2")]),t._v("之后，距离n更近一步。也就是说有多少个"),a("code",[t._v("2")]),t._v("相乘后大于"),a("code",[t._v("n")]),t._v("就会退出循环。也就是"),a("code",[t._v("2^x = n")]),t._v("得到"),a("code",[t._v("x=log2(n)")]),t._v("。所以时间复杂度为"),a("code",[t._v("O(logn)")])]),t._v(" "),a("h2",{attrs:{id:"空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[t._v("#")]),t._v(" 空间复杂度")]),t._v(" "),a("ol",[a("li",[t._v("如果算法执行所需要的临时空间不随着某个变量"),a("code",[t._v("n")]),t._v("的大小而变化，即此算法空间复杂度为一个常量，可表示为 "),a("code",[t._v("O(1)")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);